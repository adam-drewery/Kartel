on:
  workflow_call:
    inputs:
      name:
        required: true
        type: string
      path:
        required: true
        type: string
      ports:
        required: true
        type: string
jobs:
  deploy-containers:
    name: Deploy
    runs-on: ubuntu-latest
    environment:
      name: staging
    env:
      ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
    steps:

      - uses: actions/checkout@v3

      - name: Set ACR Credentials
        id: set_output
        run: |
          terraform init
          ACR_USERNAME=$(terraform output -raw acr_username)
          ACR_PASSWORD=$(terraform output -raw acr_password)
          echo "::add-mask::$ACR_USERNAME"
          echo "::add-mask::$ACR_PASSWORD"
          echo "::set-output name=acr_username::$ACR_USERNAME"
          echo "::set-output name=acr_password::$ACR_PASSWORD"

      - uses: azure/docker-login@v1
        with:
          login-server: kartel.azurecr.io
          username: ${{ steps.set_output.outputs.acr_username }}
          password: ${{ steps.set_output.outputs.acr_password }}

      - run: |
          docker build -t kartel.azurecr.io/${{inputs.name}}:latest -f ./${{inputs.path}}/Dockerfile .
          docker push kartel.azurecr.io/${{inputs.name}}:latest

      - uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.CLIENT_ID }}","clientSecret":"${{ secrets.CLIENT_SECRET }}","subscriptionId":"${{ secrets.SUBSCRIPTION_ID }}","tenantId":"${{ secrets.TENANT_ID }}"}'

      - name: Deploy to Azure Container Instances
        run: |
          az container create --resource-group kartel-staging --registry-username ${{ steps.set_output.outputs.acr_username }} --registry-password ${{ steps.set_output.outputs.acr_password }} --name ${{inputs.name}} --image kartel.azurecr.io/${{inputs.name}}:latest --ports ${{inputs.ports}}
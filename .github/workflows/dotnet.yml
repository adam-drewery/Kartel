name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  
  setup:
    name: 'Setup'
    runs-on: ubuntu-latest
    steps:

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
        
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.5.1
  
  build:
    name: 'Build & Test'
    runs-on: ubuntu-latest
    needs: [setup]
    steps:

    - uses: actions/checkout@v3
        
    - name: Nuget Restore
      run: dotnet restore
      
    - name: Dotnet Build
      run: dotnet build --no-restore
      
    - name: Dotnet Test
      run: dotnet test --no-build --verbosity normal
      
  terraform-plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    needs: [setup]
    steps:

      - uses: actions/checkout@v3
        
      - uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.CLIENT_ID }}","clientSecret":"${{ secrets.CLIENT_SECRET }}","subscriptionId":"${{ secrets.SUBSCRIPTION_ID }}","tenantId":"${{ secrets.TENANT_ID }}"}'

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: false

#      - name: Terraform Apply
#        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
#        run: terraform apply -auto-approve -no-color

  deploy-containers:
    name: 'Deploy Containers'
    runs-on: ubuntu-latest
    needs: [setup, build]
    environment:
      name: deployment
    steps:  
    
    - uses: azure/docker-login@v1
      with:
        login-server: kartel.azurecr.io
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - run: |
        docker build -t kartel.azurecr.io/api:latest ./api
        docker push kartel.azurecr.io/api:latest

    - uses: azure/login@v1
      with:
        creds: '{"clientId":"${{ secrets.CLIENT_ID }}","clientSecret":"${{ secrets.CLIENT_SECRET }}","subscriptionId":"${{ secrets.SUBSCRIPTION_ID }}","tenantId":"${{ secrets.TENANT_ID }}"}'

    - name: Deploy to Azure Container Instances
      run: |
        az container create --resource-group kartel --name api --image kartel.azurecr.io/api:latest --dns-name-label <dns-name-label> --ports 80
name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  
  setup:
    name: 'Setup'
    runs-on: ubuntu-latest
    steps:

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
        
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.5.1
  
  build:
    name: 'Dotnet Test'
    runs-on: ubuntu-latest
    needs: [setup]
    steps:

    - uses: actions/checkout@v3
        
    - name: Nuget Restore
      run: dotnet restore
      
    - name: Dotnet Build
      run: dotnet build --no-restore
      
    - name: Dotnet Test
      run: dotnet test --no-build --verbosity normal

  terraform-plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    needs: [setup]
    env:
      ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
    steps:

      - uses: actions/checkout@v3

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan
        continue-on-error: false

  terraform-apply:
    name: 'Terraform Apply'
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: [ build, terraform-plan ]
    environment:
      name: staging
    env:
      ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
    steps:

    - uses: actions/checkout@v3

    - name: Terraform Init
      id: init
      run: terraform init

    - name: Terraform Apply
      run: terraform apply -auto-approve

  deploy-api:
    name: Kartel.Api
    needs: [ terraform-apply ]
    uses: ./.github/workflows/deploy-container.yml
    with:
      name: api
      path: Kartel.Api
      ports: 6840 6841
      secrets: inherit

  deploy-web:
    name: Kartel.Web
    needs: [ terraform-apply ]
    uses: ./.github/workflows/deploy-container.yml
    with:
      name: web
      path: Kartel.Web
      ports: 80 8080
      secrets: inherit